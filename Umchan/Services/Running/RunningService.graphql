
query RunningList($name: String) {
    runnings(name: $name) {
        code,
        success,
        message,
        runnings {
            id,
            name,
            oneLine,
            runningDate {
                year,
                month,
                date,
                hour,
                minute
            },
            registerLimitDate {
                year,
                month,
                date,
                hour,
                minute
            },
            district
        }
    }
}

query Running($input: RunningInput) {
    running(input: $input) {
        code,
        success,
        message,
        running {
            id,
            name,
            oneLine,
            leader {
                userID,
                name,
                nickname,
                district
            },
            members {
                userID,
                name,
                nickname,
                district
            },
            awaitMembers {
                userID,
                name,
                nickname,
                district
            },
            runningDate {
                year,
                month,
                date,
                hour,
                minute
            },
            registerLimitDate {
                year,
                month,
                date,
                hour,
                minute
            },
            runningPoints {
                latitude,
                longitude
            },
            district
        },
        isApplied,
        isMember
    }
}

mutation CreateRunning($nickname: String, $running: CreateRunningInput) {
    createRunning(nickname: $nickname, running: $running) {
        code,
        success,
        message
    }
}

mutation ApplyRunning($input: ApplyRunningInput) {
    applyRunning(input: $input) {
        code,
        success,
        message
    }
}

mutation GoOutRunning($input: GoOutInput) {
    goOutRunning(input: $input) {
        code,
        success,
        message
    }
}

mutation CancelRunning($input: CancelRunningInput) {
    cancelRunning(input: $input) {
        code,
        success,
        message
    }
}

mutation AcceptRunningMemeber($input: AcceptRunningMemberInput) {
    acceptRunningMember(input: $input) {
        code,
        success,
        message
    }
}

mutation CheckRunningMemeber($input: CheckRunningMemberInput) {
    checkRunningMember(input: $input) {
        code,
        success,
        message
    }
}

mutation RejectRunningMemeber($input: RejectRunningMemberInput) {
    rejectRunningMember(input: $input) {
        code,
        success,
        message
    }
}

mutation ExceptRunningMemeber($input: ExceptRunningMemberInput) {
    exceptRunningMember(input: $input) {
        code,
        success,
        message
    }
}
